
rm -f saito/web/options
rm -f remixtmp.js
rm -f saito/web/browser.js.gz
rm -f saito/web/browser.js-*
rm -f data/database.sq3
rm -f data/bank.sq3
rm -f data/registry.sq3
rm -f data/log.txt
rm -f data/*.sq3-journal
rm -f data/blocks/*.blk
rm -f data/blocks/*.zip
rm -f data/blocks/*.segadd
rm -f data/tmp/*.blk
rm -f data/tmp/*.zip
rm -f options
rm -f modules/mod/registry/web/addresses.txt
rm -f logs/*

if [ -e ./options.bank ]; then
    cp options.bank options
elif [ -e ./options.server ]; then
    cp options.server options
fi



# generate browser.js
sed 's/app.BROWSER    = 0;/app.BROWSER    = 1;/g' start.js > browser.js 
./../node_modules/.bin/browserify browser.js -o saito/web/browser.js -i express -i sqlite3 -i express-basic-auth -i sendgrid -i request -i bluebird -i socket.io -i phantomjs -i express-fileupload -i body-parser -i shashmap -i http -i http-proxy -i simple-socks -i unzip -i node-zip -i shelljs -i crx -i jimp -i image-resolver
rm browser.js


# -i winston -i winston-daily-rotate-file


for d in modules/mods/* ; do
 if [ -f $d/compile ] ; then
   chmod +x $d/compile
   $d/compile
 fi
done


#cd saito/web
#gzip -k browser.js
#./compile
#cd ../../
echo ""
echo "///////////////"
echo "// IMPORTANT //"
echo "///////////////"
echo "please confirm your \"options\" file is properly configured. "
echo "The simplest version that will work for a local install without"
echo "support for built-in DNS or message-archiving is: "
echo ""
echo "{"
echo "\"server\":{\"host\":\"localhost\",\"port\":12101,\"publickey\":\"\"}"
echo "}"
echo ""
echo ""
echo "once that is done, you can start Saito by running: "
echo ""
echo "$> node start.js "
echo ""
echo ""


